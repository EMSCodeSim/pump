workflows:
  ios_release:
    name: FireOpsCalc iOS Release
    instance_type: mac_mini_m2
    max_build_duration: 60

    # Needed because we're publishing with `auth: integration`
    integrations:
      app_store_connect: FireCalc

    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true

    environment:
      xcode: 16.4
      cocoapods: default
      node: 20.11.1
      vars:
        WORKSPACE: "ios/App/App.xcworkspace"
        SCHEME: "App"
        BUNDLE_ID: "com.fireopscalc.app"
        TEAM_ID: "QZ55W58398"
        ARCHIVE_DIR: "/Users/builder/clone/build"
        ARCHIVE_PATH: "/Users/builder/clone/build/App.xcarchive"
        EXPORT_DIR: "/Users/builder/clone/Export"
        IPA_NAME: "FireOpsCalc.ipa"

    scripts:
      - name: "0) show Codemagic signing folders"
        script: |
          echo "CM_PROVISIONING_PROFILES_DIR=$CM_PROVISIONING_PROFILES_DIR"
          if [ -n "$CM_PROVISIONING_PROFILES_DIR" ] && [ -d "$CM_PROVISIONING_PROFILES_DIR" ]; then
            ls -la "$CM_PROVISIONING_PROFILES_DIR" || true
          else
            echo "⚠️ No profiles mounted yet"
          fi
          ls -la /Users/builder/Library/MobileDevice/Certificates 2>/dev/null || true

      - name: "1) best-effort: fetch signing from ASC"
        script: |
          set +e
          # try to pull app-store profile
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create || echo "⚠️ app-store fetch failed"
          # try to pull dev profile too
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_DEVELOPMENT --create || echo "⚠️ dev fetch failed"
          # import whatever got downloaded
          keychain add-certificates || echo "⚠️ add-certificates failed"
          # map profiles into xcode project
          xcode-project use-profiles || echo "⚠️ xcode-project use-profiles failed"
          set -e

      - name: "2) install Node deps & build web"
        script: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci || npm install
            else
              npm install
            fi
            npm run build --if-present
          else
            echo "No package.json, skipping web build."
          fi

      - name: "3) Capacitor sync iOS"
        script: |
          if [ -f capacitor.config.ts ] || [ -f capacitor.config.json ] || [ -f capacitor.config.js ]; then
            npx cap sync ios
          else
            echo "No capacitor config, skipping"
          fi
          echo "=== ios/App/App contents ==="
          ls -la ios/App/App || true

      - name: "4) install CocoaPods"
        script: |
          cd ios/App
          pod install --repo-update || pod install
          cd ../..

      - name: "5) create ExportOptions.plist"
        script: |
          EXPORT_PLIST="/Users/builder/export_options.plist"
          rm -f "$EXPORT_PLIST"
          /usr/bin/plutil -create xml1 "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :method string app-store" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :teamID string $TEAM_ID" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :uploadBitcode bool false" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :compileBitcode bool false" "$EXPORT_PLIST"
          echo "=== ExportOptions.plist ==="
          /usr/libexec/PlistBuddy -c "Print" "$EXPORT_PLIST"

      - name: "6) show Xcode signing settings"
        script: |
          xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -showBuildSettings | \
            grep -E "CODE_SIGN|DEVELOPMENT_TEAM|PRODUCT_BUNDLE_IDENTIFIER|PROVISIONING" || true

      - name: "7) archive with Xcode (raw)"
        script: |
          set -e
          mkdir -p "$ARCHIVE_DIR"
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath "$ARCHIVE_PATH" \
            archive
          if [ ! -d "$ARCHIVE_PATH" ]; then
            echo "❌ Archive was not created at $ARCHIVE_PATH"
            ls -R "$ARCHIVE_DIR" || true
            exit 1
          fi

      - name: "8) export IPA"
        script: |
          set -e
          mkdir -p "$EXPORT_DIR"
          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist /Users/builder/export_options.plist \
            -exportPath "$EXPORT_DIR"

          IPA_PATH="$(ls -1t "$EXPORT_DIR"/*.ipa 2>/dev/null | head -n 1)"
          if [ -z "$IPA_PATH" ]; then
            echo "❌ No IPA created"
            ls -la "$EXPORT_DIR" || true
            exit 1
          fi
          mv -f "$IPA_PATH" "$EXPORT_DIR/$IPA_NAME"
          echo "✅ IPA at $EXPORT_DIR/$IPA_NAME"

    artifacts:
      - "$EXPORT_DIR/$IPA_NAME"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
