workflows:
  ios-release:
    name: FireOpsCalc iOS Release
    environment:
      vars:
        APPLE_TEAM_ID: QZ55W58398
        BUNDLE_ID: com.fireopscalc.app
        XCODE_VERSION: 16.4
        NODE_VERSION: 20.15.0
      xcode: $XCODE_VERSION
      node: $NODE_VERSION
      cocoapods: default

    scripts:
      - name: Clean install and sync Capacitor iOS
        script: |
          set -euo pipefail
          npm ci
          npx cap sync ios
          cd ios/App
          pod repo update
          pod install --repo-update
          cd ../..

      - name: Install signing assets from app settings
        script: |
          set -e
          # Requires you added the .p12 (Apple Distribution) and App Store .mobileprovision in the Codemagic app UI
          keychain initialize
          keychain add-certificates
          xcode-project use-profiles

      - name: Detect Xcode workspace and scheme (use CocoaPods workspace, not project.xcworkspace)
        script: |
          set -euo pipefail
          WS="$(find ios -maxdepth 3 -name "*.xcworkspace" ! -path "*/project.xcworkspace" | head -n 1 || true)"
          if [ -z "$WS" ]; then
            echo "❌ No real .xcworkspace found (CocoaPods). Did 'pod install' run in ios/App?"
            exit 1
          fi
          echo "Detected workspace: $WS"
          echo "DETECTED_WORKSPACE=$WS" >> $CM_ENV

          SCHEMES_RAW="$(xcodebuild -list -workspace "$WS" 2>/dev/null | sed -n '/Schemes:/,$p' | tail -n +2 || true)"
          SCHEMES="$(printf "%s\n" "$SCHEMES_RAW" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e '/^$/d')"
          echo "Detected schemes:"; printf "%s\n" "$SCHEMES" || true
          if printf "%s\n" "$SCHEMES" | grep -qx "App"; then
            DETECTED_SCHEME="App"
          else
            DETECTED_SCHEME="$(printf "%s\n" "$SCHEMES" | head -n1)"
          fi
          if [ -z "${DETECTED_SCHEME:-}" ]; then
            echo "❌ No shared scheme found. In Xcode: Product → Scheme → Manage Schemes → check 'Shared', commit *.xcscheme."
            exit 1
          fi
          echo "Using scheme: '$DETECTED_SCHEME'"
          echo "DETECTED_SCHEME=$DETECTED_SCHEME" >> $CM_ENV

      - name: Build iOS archive (Release) with Automatic signing (per-target mapping from use-profiles)
        script: |
          set -euo pipefail
          ARCHIVE_PATH="$CM_BUILD_DIR/build/App.xcarchive"
          RESULT_BUNDLE="$CM_BUILD_DIR/ArchiveResult.xcresult"
          mkdir -p "$(dirname "$ARCHIVE_PATH")"

          # IMPORTANT: Do NOT pass PROVISIONING_PROFILE_SPECIFIER or CODE_SIGN_IDENTITY here.
          # xcode-project use-profiles already set the correct profile for the App target.
          xcodebuild \
            -workspace "$DETECTED_WORKSPACE" \
            -scheme "$DETECTED_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath "$ARCHIVE_PATH" \
            -resultBundlePath "$RESULT_BUNDLE" \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            clean archive | tee "$CM_BUILD_DIR/xcbuild.raw.log"

          STATUS=${PIPESTATUS[0]}
          if [ $STATUS -ne 0 ]; then
            echo "❌ xcodebuild failed. Last 200 lines:"
            tail -n 200 "$CM_BUILD_DIR/xcbuild.raw.log" || true
            echo "Result bundle at: $RESULT_BUNDLE"
            exit $STATUS
          fi
          [ -d "$ARCHIVE_PATH" ] || { echo "❌ Archive not found at $ARCHIVE_PATH"; exit 1; }
          echo "✅ Archive created at: $ARCHIVE_PATH"

      - name: Export IPA (App Store)
        script: |
          set -euo pipefail
          ARCHIVE_PATH="$CM_BUILD_DIR/build/App.xcarchive"
          EXPORT_PATH="$CM_BUILD_DIR/build/export"
          mkdir -p "$EXPORT_PATH"

          # Export with automatic signing; archive already resolved signing
          cat > "$CM_BUILD_DIR/exportOptions.plist" <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>uploadSymbols</key><true/>
            <key>compileBitcode</key><false/>
            <key>signingStyle</key><string>automatic</string>
            <key>teamID</key><string>$APPLE_TEAM_ID</string>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist "$CM_BUILD_DIR/exportOptions.plist" \
            -exportPath "$EXPORT_PATH"

          IPA_FILE="$(find "$EXPORT_PATH" -name "*.ipa" | head -n 1 || true)"
          if [ -z "$IPA_FILE" ]; then
            echo "❌ No IPA found in export folder:"
            ls -la "$EXPORT_PATH" || true
            exit 1
          fi
          echo "✅ IPA exported successfully: $IPA_FILE"

    artifacts:
      - build/export/*.ipa
      - build/ArchiveResult.xcresult
      - build/App.xcarchive
