workflows:
  ios_release:
    name: FireOpsCalc iOS Release
    instance_type: mac_mini_m2
    max_build_duration: 60

    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true

    integrations:
      app_store_connect: FireCalc

    environment:
      xcode: 16.4
      cocoapods: default
      node: 20.11.1
      vars:
        # Xcode / app metadata
        PRODUCT_BUNDLE_IDENTIFIER: "com.fireopscalc.app"
        DEVELOPMENT_TEAM: "QZ55W58398"
        WORKSPACE: "ios/App/App.xcworkspace"
        SCHEME: "App"
        CONFIGURATION: "Release"

        # Web build config (adjust if your project uses different commands/dirs)
        WEB_BUILD_CMD: "npm run build"
        WEB_DIR: "www"   # falls back to dist/build/www if not found
        IPA_EXPORT_DIR: "/Users/builder/clone/Export"
        IPA_NAME: "FireOpsCalc.ipa"

        # Paths for raw xcodebuild fallback
        ARCHIVE_PATH: "/Users/bbuilder/clone/build/App.xcarchive"

      ios_signing:
        certificates:
          - FireCalcCertiicate
        provisioning_profiles:
          - FireOpsCalcprofile

    scripts:
      - name: Install Node dependencies & build web assets
        script: |
          if [ -f package.json ]; then
            echo "Installing Node deps..."
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci || npm install
            else
              npm install
            fi
            echo "Building web assets..."
            if ! ${WEB_BUILD_CMD}; then
              echo "Primary WEB_BUILD_CMD failed, trying fallbacks..."
              npm run build:prod || npm run build:ios || npm run build --if-present || true
            fi
          else
            echo "No package.json found, skipping web build."
          fi

      - name: Ensure Capacitor CLI & sync iOS
        script: |
          # Use npx to avoid global installs
          if [ -f capacitor.config.ts ] || [ -f capacitor.config.json ] || [ -f capacitor.config.js ]; then
            echo "Running Capacitor sync..."
            npx cap sync ios
          else
            echo "No capacitor.config.* in repo root. If you are using Capacitor, add it so sync can generate iOS assets."
          fi

          # Determine a built web dir to copy (try WEB_DIR, then common fallbacks)
          FOUND_WEB=""
          for d in "$WEB_DIR" dist build www; do
            if [ -d "$d" ] && [ -n "$(ls -A "$d" 2>/dev/null)" ]; then
              FOUND_WEB="$d"
              break
            fi
          done

          # Fallback: if ios/App/App/public missing but built assets exist, copy them
          if [ ! -d "ios/App/App/public" ]; then
            echo "ios/App/App/public not found."
            if [ -n "$FOUND_WEB" ]; then
              echo "Copying assets from '$FOUND_WEB' -> ios/App/App/public"
              mkdir -p ios/App/App/public
              rsync -a "$FOUND_WEB"/ ios/App/App/public/
            else
              echo "WARNING: No built web assets directory found; public assets may be missing."
            fi
          fi

          # Debug: list expected files
          echo "Listing ios/App/App/ after sync/copy:"
          ls -la ios/App/App/ || true

          # Minimal safety nets if Xcode target expects these files
          if [ ! -f "ios/App/App/capacitor.config.json" ] && [ -f "capacitor.config.json" ]; then
            echo "Copying capacitor.config.json into iOS target folder..."
            cp capacitor.config.json ios/App/App/capacitor.config.json || true
          fi

          # Some templates expect a config.xml (Cordova interop); create a minimal one if missing
          if [ ! -f "ios/App/App/config.xml" ]; then
            echo "Generating minimal config.xml for Cordova interop (base64 decode)..."
            printf '%s' 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHdpZGdldCBpZD0iY29tLmZpcmVvcHNjYWxjLmFwcCIgdmVyc2lvbj0iMS4wLjAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy9ucy93aWRnZXRzIiB4bWxuczpjZHY9Imh0dHA6Ly9jb3Jkb3ZhLmFwYWNoZS5vcmcvbnMvMS4wIj4KICA8bmFtZT5GaXJlT3BzQ2FsYzwvbmFtZT4KPC93aWRnZXQ+Cg==' | base64 --decode > ios/App/App/config.xml
          fi

      - name: Install CocoaPods
        script: |
          cd ios/App
          pod install --repo-update || pod install
          cd ../..

      - name: (Optional) Bump iOS build number from Codemagic BUILD_NUMBER
        script: |
          if [ -n "$BUILD_NUMBER" ]; then
            echo "Setting CFBundleVersion to $BUILD_NUMBER"
            (cd ios/App && agvtool new-version -all "$BUILD_NUMBER") || true
            /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" ios/App/App/Info.plist || true
          fi

      - name: Build and export IPA (App Store) with verbose logs and raw fallback
        script: |
          set -e
          mkdir -p "$IPA_EXPORT_DIR"

          echo "=== Discovering workspace/scheme ==="
          xcodebuild -list -workspace "$WORKSPACE" || true
          echo "SCHEME set to: $SCHEME"

          echo "=== Preparing ExportOptions.plist ==="
          printf '%s' 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHBsaXN0IFBVQkxJQyAtLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4gImh0dHA6Ly93d3cuYXBwbGUuY29tL0RURHMvUHJvcGVydHlMaXN0LTEuMC5kdGQiPgo8cGxpc3Qgd2Vyc2lvbj0iMS4wIj4KPGRpY3Q+CiAgPGtleTxtZXRob2Q8L2tleT48c3RyaW5nPmFwcC1zdG9yZTwvc3RyaW5nPgogIDxrZXk+c2lnbmluZ1N0eWxlPC9rZXk+PHN0cmluZz5hdXRvbWF0aWM8L3N0cmluZz4KICA8a2V5PnRlYW1JRDwva2V5PjxzdHJpbmc+UVo1NVc1ODM5ODwvc3RyaW5nPgogIDxrZXk+Y29tcGlsZUJpdGNvZGU8L2tleT48ZmFsc2UvPgogIDxrZXk+dXBsb2FkQml0Y29kZTwva2V5PjxmYWxzZS8+CjwvZGljdD4KPC9wbGlzdD4K' | base64 --decode > /tmp/ExportOptions.plist
          plutil -p /tmp/ExportOptions.plist || true

          echo "=== Attempt #1: xcode-project build-ipa (verbose) ==="
          set +e
          xcode-project build-ipa \
            --workspace "$WORKSPACE" \
            --scheme "$SCHEME" \
            --config "$CONFIGURATION" \
            --ipa-directory "$IPA_EXPORT_DIR" \
            --export-options-plist "/tmp/ExportOptions.plist" \
            --verbose
          XC_HELPER_STATUS=$?
          set -e

          if [ $XC_HELPER_STATUS -ne 0 ]; then
            echo "xcode-project helper failed (exit $XC_HELPER_STATUS). Falling back to raw xcodebuild…"
            ARCHIVE_PATH="/Users/builder/clone/build/App.xcarchive"
            EXPORT_PATH="$IPA_EXPORT_DIR/export_tmp"

            rm -rf "$ARCHIVE_PATH" "$EXPORT_PATH"
            mkdir -p "$EXPORT_PATH"

            echo "=== Archive with xcodebuild ==="
            xcodebuild -workspace "$WORKSPACE" \
              -scheme "$SCHEME" \
              -configuration "$CONFIGURATION" \
              -archivePath "$ARCHIVE_PATH" \
              DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
              PRODUCT_BUNDLE_IDENTIFIER="$PRODUCT_BUNDLE_IDENTIFIER" \
              CODE_SIGN_STYLE=Automatic \
              archive

            echo "=== Export with xcodebuild -exportArchive ==="
            xcodebuild -exportArchive \
              -archivePath "$ARCHIVE_PATH" \
              -exportOptionsPlist "/tmp/ExportOptions.plist" \
              -exportPath "$EXPORT_PATH"

            # Move IPA to final name/location
            IPA_PATH="$(ls -1t "$EXPORT_PATH"/*.ipa 2>/dev/null | head -n 1)"
            if [ -z "$IPA_PATH" ]; then
              echo "❌ Raw export did not produce an IPA. Contents of $EXPORT_PATH:"
              ls -la "$EXPORT_PATH" || true
              exit 1
            fi
            mv -f "$IPA_PATH" "$IPA_EXPORT_DIR/$IPA_NAME"
            echo "✅ Exported (fallback): $IPA_EXPORT_DIR/$IPA_NAME"
          else
            # Helper succeeded — rename newest ipa to stable name
            IPA_PATH="$(ls -1t "$IPA_EXPORT_DIR"/*.ipa 2>/dev/null | head -n 1)"
            if [ -z "$IPA_PATH" ]; then
              echo "❌ Helper reported success but no IPA found in $IPA_EXPORT_DIR"
              ls -la "$IPA_EXPORT_DIR" || true
              exit 1
            fi
            mv -f "$IPA_PATH" "$IPA_EXPORT_DIR/$IPA_NAME"
            echo "✅ Exported: $IPA_EXPORT_DIR/$IPA_NAME"
          fi

    artifacts:
      - "$IPA_EXPORT_DIR/$IPA_NAME"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
