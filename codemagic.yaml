# codemagic.yaml
workflows:
  ios_release:
    name: iOS Release (App Store Connect)
    max_build_duration: 120
    instance_type: mac_mini_m2

    environment:
      xcode: 16.4
      cocoapods: default
      node: latest
      ruby: default

      ios_signing:
        certificates:
          - FireOpsCalc Distribution
        provisioning_profiles:
          - FireOpsCalc App Store Provision

      vars:
        APP_IDENTIFIER: com.fireopscalc.app
        TEAM_ID: QZ55W58398
        XCODE_SCHEME: App    # ‚ö†Ô∏è This MUST exactly match your scheme name in Xcode (check case!)
        APP_STORE_CONNECT_KEY_IDENTIFIER: 82567339RS
        APP_STORE_CONNECT_ISSUER_ID: a786600e-e10a-42b2-a2bf-443a1da2554b
        APP_STORE_CONNECT_PRIVATE_KEY: |
          -----BEGIN PRIVATE KEY-----
          (paste full .p8 key here)
          -----END PRIVATE KEY-----

    scripts:
      - name: Verify workspace & scheme
        script: |
          echo "üîç Checking for iOS workspace..."
          find . -name "*.xcworkspace"
          echo "üîç Checking available schemes..."
          xcodebuild -list -workspace ios/App/App.xcworkspace || true

      - name: Install dependencies
        script: |
          set -e
          if [ -f package.json ]; then
            echo "üì¶ Installing npm dependencies"
            npm ci
            npm run build || true
          fi

      - name: Pod install
        script: |
          set -e
          cd ios/App
          pod repo update
          pod install --verbose
          cd ../..

      - name: Build & Archive app
        script: |
          set -e
          ARCHIVE_PATH="$CM_BUILD_DIR/App.xcarchive"
          echo "üì¶ Archiving to $ARCHIVE_PATH"
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination generic/platform=iOS \
            -archivePath "$ARCHIVE_PATH" \
            archive \
            PRODUCT_BUNDLE_IDENTIFIER="$APP_IDENTIFIER" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            | xcpretty

          if [ ! -d "$ARCHIVE_PATH" ]; then
            echo "‚ùå Archive not found at $ARCHIVE_PATH"
            exit 1
          fi
          echo "‚úÖ Archive created successfully"

      - name: Prepare export options
        script: |
          cat > "$CM_BUILD_DIR/export_options.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key><string>app-store</string>
              <key>signingStyle</key><string>manual</string>
              <key>uploadSymbols</key><true/>
              <key>stripSwiftSymbols</key><true/>
            </dict>
          </plist>
          PLIST

      - name: Export IPA
        script: |
          set -e
          IPA_DIR="$CM_BUILD_DIR/ipa"
          mkdir -p "$IPA_DIR"
          echo "üì¶ Exporting IPA to $IPA_DIR"
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/export_options.plist" \
            -exportPath "$IPA_DIR" \
            | xcpretty
          echo "‚úÖ Contents of IPA folder:"
          ls -la "$IPA_DIR"

      - name: Upload to App Store Connect
        script: |
          set -e
          IPA_PATH="$CM_BUILD_DIR/ipa/App.ipa"
          if [ ! -f "$IPA_PATH" ]; then
            echo "‚ùå IPA not found at $IPA_PATH"
            echo "üìÅ IPA folder contents:"
            ls -la "$CM_BUILD_DIR/ipa" || true
            exit 1
          fi
          echo "üöÄ Uploading $IPA_PATH to App Store Connect..."
          app-store-connect publish \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$IPA_PATH"

    artifacts:
      - $CM_BUILD_DIR/ipa/*.ipa
      - $CM_BUILD_DIR/App.xcarchive
