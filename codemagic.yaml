workflows:
  ios_release:
    name: iOS Release (Automatic signing + ASC from group)
    max_build_duration: 60
    instance_type: mac_mini_m2
    environment:
      ios_signing:
        # We let Xcode create/use the right profiles with -allowProvisioningUpdates
        # No manual P12/profile install needed.
        provisioning_profiles: []
      xcode: 16.4
      cocoapods: default
      vars:
        APP_ID: com.fireopscalc.app
        XCODE_WORKSPACE: ios/App/App.xcworkspace
        XCODE_SCHEME: App
        # Set your Apple Developer Team ID here (non-secret)
        DEVELOPMENT_TEAM: QZ55W58398
      groups:
        # Create this group in Codemagic UI (Settings > Environment variables)
        # and add the three secrets:
        #  - APP_STORE_CONNECT_PRIVATE_KEY  (the full .p8 contents)
        #  - APP_STORE_CONNECT_KEY_IDENTIFIER (e.g. ABCDE12345)
        #  - APP_STORE_CONNECT_ISSUER_ID (UUID from ASC)
        - app_store_connect
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - ios/Pods
        - $HOME/Library/Developer/Xcode/DerivedData/**

    scripts:
      - name: Preflight — resolve & verify App Store Connect vars
        script: |
          set -euo pipefail
          missing=0
          for v in APP_STORE_CONNECT_PRIVATE_KEY APP_STORE_CONNECT_KEY_IDENTIFIER APP_STORE_CONNECT_ISSUER_ID; do
            if [ -z "${!v:-}" ]; then
              echo "❌ Missing required env var: $v"
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then
            echo "Aborting due to missing App Store Connect variables."
            exit 1
          fi
          echo "✅ App Store Connect variables present."

      - name: Install dependencies
        script: |
          set -e
          cd ios
          pod install --repo-update
          cd -

      - name: Build IPA (Automatic signing; let Xcode manage profiles)
        script: |
          set -euxo pipefail
          xcrun xcodebuild \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            PRODUCT_BUNDLE_IDENTIFIER="$APP_ID" \
            CODE_SIGN_STYLE=Automatic \
            archive

          # Export .ipa for App Store distribution
          cat > /tmp/exportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>compileBitcode</key><false/>
            <key>destination</key><string>export</string>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>stripSwiftSymbols</key><true/>
            <key>uploadSymbols</key><true/>
          </dict>
          </plist>
          PLIST

          xcrun xcodebuild \
            -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist /tmp/exportOptions.plist \
            -exportPath "$CM_BUILD_DIR/ipa" \
            -allowProvisioningUpdates

          ls -al "$CM_BUILD_DIR/ipa"

      - name: Upload to App Store Connect (TestFlight)
        script: |
          set -euo pipefail

          IPA_PATH="$(/bin/ls -1 "$CM_BUILD_DIR/ipa"/*.ipa | head -n1 || true)"
          if [ -z "$IPA_PATH" ]; then
            echo "❌ No IPA found to upload at $CM_BUILD_DIR/ipa"
            exit 1
          fi
          echo "Uploading IPA_PATH = [$IPA_PATH] to App Store Connect..."

          # Codemagic app-store-connect CLI reads these env vars automatically.
          app-store-connect publish \
            --path "$IPA_PATH"

    artifacts:
      - $CM_BUILD_DIR/ipa/*.ipa
      - $CM_BUILD_DIR/App.xcarchive
      - $HOME/Library/Logs/gym/*.log
      - ~/Library/Developer/Xcode/DerivedData/**/Logs/Build/*.log

    publishing:
      email:
        recipients:
          - your@email.com
        notify:
          success: true
          failure: true
