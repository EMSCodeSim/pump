workflows:
  ios_release:
    name: FireOpsCalc iOS Release
    instance_type: mac_mini_m2
    max_build_duration: 60

    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true

    integrations:
      app_store_connect: FireCalc

    environment:
      xcode: 16.4
      cocoapods: default
      node: 20.11.1
      vars:
        WORKSPACE: "ios/App/App.xcworkspace"
        PROJECT: "ios/App/App.xcodeproj"
        SCHEME: "App"
        CONFIGURATION: "Release"
        DEVELOPMENT_TEAM: "QZ55W58398"
        PRODUCT_BUNDLE_IDENTIFIER: "com.fireopscalc.app"
        PROVISIONING_PROFILE_SPECIFIER: "FireOpsCalcApp_AppStore"

        ARCHIVE_PATH: "/Users/builder/clone/build/App.xcarchive"
        EXPORT_DIR: "/Users/builder/clone/Export/export_tmp"
        IPA_EXPORT_DIR: "/Users/builder/clone/Export"
        IPA_NAME: "FireOpsCalc.ipa"

      ios_signing:
        certificates:
          - FireCalcCertiicate
        provisioning_profiles:
          - FireOpsCalcApp_AppStore

    scripts:
      - name: Install Node deps & build web (if present)
        script: |
          if [ -f package.json ]; then
            npm ci || npm install
            npm run build --if-present
          else
            echo "No package.json, skipping web build."
          fi

      - name: Capacitor sync iOS
        script: |
          if [ -f capacitor.config.ts ] || [ -f capacitor.config.json ] || [ -f capacitor.config.js ]; then
            npx cap sync ios
          else
            echo "No capacitor.config.* found — assuming native iOS already present."
          fi
          ls -la ios/App/App/ || true

      - name: Install CocoaPods
        script: |
          cd ios/App
          pod install --repo-update || pod install
          cd ../..

      - name: Create shared Xcode scheme on the build machine
        script: |
          set -e
          SCHEME_DIR="ios/App/App.xcodeproj/xcshareddata/xcschemes"
          mkdir -p "$SCHEME_DIR"
          cat > "$SCHEME_DIR/App.xcscheme" <<'XML'
          <?xml version="1.0" encoding="UTF-8"?>
          <Scheme
             LastUpgradeVersion = "1600"
             version = "1.7">
             <BuildAction
                parallelizeBuildables = "YES"
                buildImplicitDependencies = "YES">
                <BuildActionEntries>
                   <BuildActionEntry
                      buildForTesting = "YES"
                      buildForRunning = "YES"
                      buildForProfiling = "YES"
                      buildForArchiving = "YES"
                      buildForAnalyzing = "YES">
                      <BuildableReference
                         BuildableIdentifier = "primary"
                         BlueprintIdentifier = "App"
                         BuildableName = "App.app"
                         BlueprintName = "App"
                         ReferencedContainer = "container:App.xcodeproj">
                      </BuildableReference>
                   </BuildActionEntry>
                </BuildActionEntries>
             </BuildAction>
             <TestAction
                buildConfiguration = "Debug"
                selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
                selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
                shouldUseLaunchSchemeArgsEnv = "YES">
                <Testables>
                </Testables>
             </TestAction>
             <LaunchAction
                buildConfiguration = "Debug"
                selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
                selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
                launchStyle = "0"
                useCustomWorkingDirectory = "NO"
                ignoresPersistentStateOnLaunch = "NO"
                debugDocumentVersioning = "YES">
                <BuildableProductRunnable
                   runnableDebuggingMode = "0">
                   <BuildableReference
                      BuildableIdentifier = "primary"
                      BlueprintIdentifier = "App"
                      BuildableName = "App.app"
                      BlueprintName = "App"
                      ReferencedContainer = "container:App.xcodeproj">
                   </BuildableReference>
                </BuildableProductRunnable>
             </LaunchAction>
             <ProfileAction
                buildConfiguration = "Release"
                shouldUseLaunchSchemeArgsEnv = "YES"
                savedToolIdentifier = ""
                useCustomWorkingDirectory = "NO"
                debugDocumentVersioning = "YES">
                <BuildableProductRunnable
                   runnableDebuggingMode = "0">
                   <BuildableReference
                      BuildableIdentifier = "primary"
                      BlueprintIdentifier = "App"
                      BuildableName = "App.app"
                      BlueprintName = "App"
                      ReferencedContainer = "container:App.xcodeproj">
                   </BuildableReference>
                </BuildableProductRunnable>
             </ProfileAction>
             <AnalyzeAction
                buildConfiguration = "Debug">
             </AnalyzeAction>
             <ArchiveAction
                buildConfiguration = "Release"
                revealArchiveInOrganizer = "YES">
             </ArchiveAction>
          </Scheme>
          XML

          echo "=== Schemes in workspace after creating one ==="
          xcodebuild -list -workspace "$WORKSPACE" || true

      - name: Create ExportOptions.plist
        script: |
          EXPORT_PLIST="/Users/builder/ExportOptions.plist"
          rm -f "$EXPORT_PLIST"
          /usr/bin/plutil -create xml1 "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :method string app-store-connect" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :signingStyle string manual" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :teamID string $DEVELOPMENT_TEAM" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :provisioningProfiles dict" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :provisioningProfiles:$PRODUCT_BUNDLE_IDENTIFIER string $PROVISIONING_PROFILE_SPECIFIER" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :compileBitcode bool false" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :uploadSymbols bool true" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Print" "$EXPORT_PLIST"

      - name: Archive App (manual signing)
        script: |
          set -e
          echo "=== ARCHIVING FireOpsCalc ==="
          rm -rf "$ARCHIVE_PATH"
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -destination 'generic/platform=iOS' \
            -archivePath "$ARCHIVE_PATH" \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            PRODUCT_BUNDLE_IDENTIFIER="$PRODUCT_BUNDLE_IDENTIFIER" \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
            archive

      - name: Export IPA
        script: |
          set -e
          mkdir -p "$EXPORT_DIR" "$IPA_EXPORT_DIR"
          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist "/Users/builder/ExportOptions.plist" \
            -exportPath "$EXPORT_DIR"

          IPA_PATH="$(ls -1t "$EXPORT_DIR"/*.ipa 2>/dev/null | head -n 1)"
          if [ -z "$IPA_PATH" ]; then
            echo "❌ Export did not produce an IPA. Contents of $EXPORT_DIR:"
            ls -la "$EXPORT_DIR" || true
            exit 1
          fi
          mv -f "$IPA_PATH" "$IPA_EXPORT_DIR/$IPA_NAME"
          echo "✅ Exported: $IPA_EXPORT_DIR/$IPA_NAME"

    artifacts:
      - "/Users/builder/clone/Export/FireOpsCalc.ipa"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
