workflows:
  ios_release:
    name: iOS Release (App Store / TestFlight)
    max_build_duration: 120
    instance_type: mac_mini_m2

    environment:
      xcode: 16.4
      node: 20
      cocoapods: default
      vars:
        IOS_WORKSPACE: ios/App/App.xcworkspace
        IOS_SCHEME: App
        BUNDLE_ID: com.fireopscalc.app
        DEVELOPMENT_TEAM: QZ55W58398

    cache:
      cache_paths:
        - ~/.npm
        - ~/.cocoapods
        - ios/App/Pods

    integrations:
      app_store_connect: FireOpsCalc_iOS-KEY

    scripts:
      - name: Show tool versions
        script: |
          set -euxo pipefail
          node -v
          npm -v
          pod --version
          xcodebuild -version

      - name: Install dependencies
        script: |
          set -euxo pipefail
          npm ci

      - name: Sync Capacitor iOS
        script: |
          set -euxo pipefail
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          set -euxo pipefail
          cd ios/App
          pod repo update
          pod install
          cd ../..
          echo "Verify workspace exists:"
          ls -la ios/App | grep -E "App.xcworkspace|App.xcodeproj" || (echo "❌ Workspace missing"; exit 1)

      - name: Build iOS archive (Release)
        script: |
          set -euxo pipefail
          ARCHIVE_PATH="$CM_BUILD_DIR/build/App.xcarchive"
          DERIVED="$CM_BUILD_DIR/DerivedData"
          mkdir -p "$(dirname "$ARCHIVE_PATH")"

          echo "Building archive to: $ARCHIVE_PATH"
          # Use tee so we still save the raw xcodebuild log; pipefail keeps failures
          xcodebuild -workspace "$IOS_WORKSPACE" \
            -scheme "$IOS_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -derivedDataPath "$DERIVED" \
            -archivePath "$ARCHIVE_PATH" \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            -allowProvisioningUpdates \
            clean archive \
            | tee xcodebuild-archive.log \
            | xcpretty

          echo "Archive directory listing:"
          ls -la "$(dirname "$ARCHIVE_PATH")"
          if [ ! -d "$ARCHIVE_PATH" ]; then
            echo "❌ Archive not produced. Last 200 lines of xcodebuild log:"
            tail -n 200 xcodebuild-archive.log
            exit 1
          fi

      - name: Export IPA (App Store)
        script: |
          set -euxo pipefail
          ARCHIVE_PATH="$CM_BUILD_DIR/build/App.xcarchive"
          EXPORT_DIR="$CM_BUILD_DIR/build/Export"
          mkdir -p "$EXPORT_DIR"

          cat > ExportOptions.plist <<PLIST
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>teamID</key><string>${DEVELOPMENT_TEAM}</string>
            <key>stripSwiftSymbols</key><true/>
          </dict>
          </plist>
          PLIST

          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath "$EXPORT_DIR" \
            | tee xcodebuild-export.log \
            | xcpretty

          echo "IPA contents:"
          ls -la "$EXPORT_DIR"
          test -f "$EXPORT_DIR/App.ipa" || test -n "$(ls -1 "$EXPORT_DIR"/*.ipa 2>/dev/null)" || (echo "❌ No IPA exported"; tail -n 200 xcodebuild-export.log; exit 1)

    artifacts:
      - build/Export/*.ipa
      - build/App.xcarchive
      - xcodebuild-archive.log
      - xcodebuild-export.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # Optional: set a group if you have one created in ASC
        # beta_groups:
        #   - Internal Testers
