workflows:
  ios-capacitor:
    name: iOS Capacitor → TestFlight
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      node: 20
      xcode: latest
      cocoapods: default
      groups:
        - app_store_credentials   # must contain:
                                  # APP_STORE_CONNECT_KEY_IDENTIFIER (Key ID)
                                  # APP_STORE_CONNECT_ISSUER_ID     (Issuer ID)
                                  # APP_STORE_CONNECT_PRIVATE_KEY   (.p8 contents)
      vars:
        APP_IDENTIFIER: com.fireopscalc.app   # <-- set to your bundle id
        XCODE_SCHEME: App                     # <-- change if your scheme differs

    scripts:
      - name: Install deps
        script: |
          echo "Node:" && node -v
          npm ci || npm install --legacy-peer-deps

      - name: Build web to dist/
        script: |
          npm run build || true
          if [ ! -f "dist/index.html" ]; then
            mkdir -p dist
            if [ -f "index.html" ]; then
              cp index.html dist/index.html
            else
              echo "dist/index.html missing and no root index.html to copy."
              exit 1
            fi
          fi

      - name: Ensure iOS platform exists & sync
        script: |
          [ -d ios ] || npx cap add ios
          npx cap sync ios

      - name: Debug ASC vars (lengths only)
        script: |
          echo "Key ID len: ${#APP_STORE_CONNECT_KEY_IDENTIFIER} (expect ~10)"
          echo "Issuer ID len: ${#APP_STORE_CONNECT_ISSUER_ID} (expect 36)"
          echo "Private key starts with: ${APP_STORE_CONNECT_PRIVATE_KEY:0:27}"

      - name: Fetch signing files from App Store Connect (auto-create if missing)
        script: |
          set -e
          # Try all known flag variants for older/newer CLI versions
          for FLAG in identifier app-id bundle-id app-identifier; do
            echo "Trying fetch-signing-files with --$FLAG '$APP_IDENTIFIER' + --create"
            if app-store-connect fetch-signing-files \
                --type IOS_APP_STORE \
                --$FLAG "$APP_IDENTIFIER" \
                --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
                --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
                --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
                --create; then
              echo "✅ fetch-signing-files succeeded with --$FLAG"
              FOUND=1
              break
            fi
          done
          if [ -z "${FOUND:-}" ]; then
            echo "❌ Could not fetch signing files with any flag variant."
            app-store-connect fetch-signing-files -h || true
            exit 2
          fi

      - name: List fetched certs & profiles (debug)
        script: |
          echo "Provisioning Profiles:"
          ls -la "/Users/builder/Library/MobileDevice/Provisioning Profiles" || true
          echo "Certificates:"
          ls -la "/Users/builder/Library/MobileDevice/Certificates" || true

      - name: Initialize keychain & install certs/profiles
        script: |
          keychain initialize
          keychain add-certificates

      - name: Build .ipa
        script: |
          xcode-project build-ipa \
            --workspace "ios/App/App.xcworkspace" \
            --scheme "$XCODE_SCHEME"

      - name: Publish to TestFlight
        script: |
          IPA_PATH="$(find . -name '*.ipa' | head -n 1)"
          if [ -z "$IPA_PATH" ]; then
            echo "No .ipa found to upload"; exit 1
          fi
          echo "Uploading $IPA_PATH to TestFlight…"
          app-store-connect publish \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$IPA_PATH" \
            --submit-to-testflight

    artifacts:
      - "**/*.ipa"
      - "ios/App/build/**"
