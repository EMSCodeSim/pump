workflows:
  ios_release:
    name: iOS Release (App Store Connect)
    max_build_duration: 120

    environment:
      # ← Codemagic needs either `ios_signing` (below) OR an ASC-managed setup.
      # We’ll use ios_signing that points to assets stored in Codemagic > Teams.
      ios_signing:
        certificates:
          - FireOpsCalc Distribution          # exact name shown in Teams ▸ Code signing certificates
        provisioning_profiles:
          - FireOpsCalcApp                    # exact name shown in Teams ▸ iOS provisioning profiles

      vars:
        APP_IDENTIFIER: com.fireopscalc.app
        TEAM_ID: QZ55W58398
        XCODE_SCHEME: App

        # If you prefer using the App settings “Environment variables” group,
        # delete the 3 lines below and rely on $APP_STORE_CONNECT_* from the UI.
        APP_STORE_CONNECT_KEY_IDENTIFIER: 82567339RS
        APP_STORE_CONNECT_ISSUER_ID: a786600e-e10a-42b2-a2bf-443a1da2554b
        APP_STORE_CONNECT_PRIVATE_KEY: |
          -----BEGIN PRIVATE KEY-----
          (paste full .p8 key here, single-line base64 blocks are OK too)
          -----END PRIVATE KEY-----

      xcode: 16.4
      cocoapods: default
      node: latest
      ruby: default

    scripts:
      - name: Install dependencies
        script: |
          set -e
          if [ -f "package.json" ]; then
            npm ci
            npm run build || true
          fi

      - name: Pod install
        script: |
          set -e
          cd ios/App
          pod repo update
          pod install --verbose
          cd ../..

      # Optional: keep your auto-detect logic (harmless when ios_signing is present)
      - name: Locate App Store provisioning profile for $APP_IDENTIFIER
        script: |
          set -euo pipefail
          PROFILES_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"
          [ -d "$PROFILES_DIR" ] || { echo "ℹ️ No ~/Library/MobileDevice/Provisioning Profiles dir yet (Codemagic will inject from ios_signing)"; exit 0; }

          BEST_PROFILE=""
          BEST_MTIME=0
          for p in "$PROFILES_DIR"/*.mobileprovision 2>/dev/null; do
            [ -e "$p" ] || continue
            TMP_PLIST="$CM_BUILD_DIR/profile.plist"
            /usr/bin/security cms -D -i "$p" > "$TMP_PLIST"
            BID=$(/usr/libexec/PlistBuddy -c "Print Entitlements:application-identifier" "$TMP_PLIST" 2>/dev/null || true)
            PROFILE_NAME=$(/usr/libexec/PlistBuddy -c "Print Name" "$TMP_PLIST" 2>/dev/null || true)
            PROV_DEVICES=$(/usr/libexec/PlistBuddy -c "Print ProvisionedDevices" "$TMP_PLIST" 2>/dev/null || true)
            PROVISIONS_ALL=$(/usr/libexec/PlistBuddy -c "Print ProvisionsAllDevices" "$TMP_PLIST" 2>/dev/null || echo "false")
            if [ -n "$BID" ]; then SUFFIX="${BID#*.}"; else continue; fi
            if [ "$SUFFIX" = "$APP_IDENTIFIER" ] && [ "$PROVISIONS_ALL" != "true" ] && ! echo "$PROV_DEVICES" | grep -q "<array>"; then
              MTIME=$(stat -f "%m" "$p" 2>/dev/null || echo 0)
              if [ "$MTIME" -gt "$BEST_MTIME" ]; then
                BEST_MTIME="$MTIME"
                BEST_PROFILE="$p"
                BEST_PROFILE_NAME="$PROFILE_NAME"
              fi
            fi
          done
          if [ -n "${BEST_PROFILE:-}" ]; then
            echo "✅ Also found local profile: $BEST_PROFILE_NAME"
            echo "PROFILE_PATH=$BEST_PROFILE" >> "$CM_ENV"
            echo "PROFILE_NAME=$BEST_PROFILE_NAME" >> "$CM_ENV"
          else
            echo "ℹ️ No local profile found; relying on ios_signing assets."
          fi

      - name: Write export options
        script: |
          cat > "$CM_BUILD_DIR/export_options.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key><string>app-store</string>
              <key>signingStyle</key><string>manual</string>
              <key>uploadSymbols</key><true/>
              <key>stripSwiftSymbols</key><true/>
            </dict>
          </plist>
          PLIST

      - name: Archive app
        script: |
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination generic/platform=iOS \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            archive \
            "App:PRODUCT_BUNDLE_IDENTIFIER=$APP_IDENTIFIER" \
            "App:DEVELOPMENT_TEAM=$TEAM_ID" \
            "App:CODE_SIGN_STYLE=Manual" \
            "App:CODE_SIGN_IDENTITY=Apple Distribution"

      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/export_options.plist" \
            -exportPath "$CM_BUILD_DIR/ipa"

      - name: Upload to App Store Connect
        script: |
          app-store-connect publish \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$CM_BUILD_DIR/ipa/App.ipa"

    artifacts:
      - $CM_BUILD_DIR/ipa/*.ipa
