workflows:
  ios-capacitor:
    name: iOS Capacitor ‚Üí TestFlight (Auto-create signing)
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      node: 20
      xcode: latest
      cocoapods: default
      groups:
        - app_store_credentials
      vars:
        APP_IDENTIFIER: com.fireopscalc.app
        XCODE_SCHEME: App

    scripts:
      - name: Install dependencies
        script: |
          echo "Node:" && node -v
          npm ci || npm install --legacy-peer-deps

      - name: Build web files
        script: |
          npm run build || true
          if [ ! -f "dist/index.html" ]; then
            mkdir -p dist
            if [ -f "index.html" ]; then
              cp index.html dist/index.html
            else
              echo "No index.html found"; exit 1
            fi
          fi

      - name: Sync iOS platform
        script: |
          [ -d ios ] || npx cap add ios
          npx cap sync ios

      - name: Generate private key for new certificate
        script: |
          CERT_KEY_PATH="$CM_BUILD_DIR/cert_private.key"
          echo "Generating new private key..."
          openssl genrsa -out "$CERT_KEY_PATH" 2048
          echo "CERT_KEY_PATH=$CERT_KEY_PATH" >> $CM_ENV

      - name: Fetch signing files (auto-create new cert/profile)
        script: |
          echo "Fetching signing files from App Store Connect..."
          app-store-connect fetch-signing-files "$APP_IDENTIFIER" \
            --type IOS_APP_STORE \
            --platform IOS \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --certificate-key "@file:$CERT_KEY_PATH" \
            --p12-password "" \
            --create \
            --delete-stale-profiles \
            --verbose

      - name: Initialize keychain and install certs
        script: |
          keychain initialize
          keychain add-certificates

      - name: Create ExportOptions.plist
        script: |
          PLIST_PATH="$CM_BUILD_DIR/export_options.plist"
          cat <<EOF > "$PLIST_PATH"
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>stripSwiftSymbols</key><true/>
            <key>uploadSymbols</key><true/>
            <key>manageAppVersionAndBuildNumber</key><false/>
          </dict>
          </plist>
          EOF

      - name: Archive (force iOS destination)
        script: |
          ARCHIVE_PATH="$CM_BUILD_DIR/App.xcarchive"
          echo "üèó Archiving..."
          xcodebuild \
            -workspace "ios/App/App.xcworkspace" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath "$ARCHIVE_PATH" \
            archive \
            CODE_SIGN_STYLE=Automatic \
            COMPILER_INDEX_STORE_ENABLE=NO | xcpretty && exit ${PIPESTATUS[0]}

      - name: Export IPA
        script: |
          IPA_OUT_DIR="$CM_BUILD_DIR/ipa"
          mkdir -p "$IPA_OUT_DIR"
          xcodebuild -exportArchive \
                     -archivePath "$CM_BUILD_DIR/App.xcarchive" \
                     -exportOptionsPlist "$CM_BUILD_DIR/export_options.plist" \
                     -exportPath "$IPA_OUT_DIR" | xcpretty && exit ${PIPESTATUS[0]}
          ls -la "$IPA_OUT_DIR"

      - name: Publish to TestFlight
        script: |
          IPA_PATH="$(find "$CM_BUILD_DIR/ipa" -name '*.ipa' | head -n 1)"
          if [ -z "$IPA_PATH" ]; then
            echo "‚ùå No IPA found"; exit 1
          fi
          echo "Uploading $IPA_PATH to TestFlight..."
          app-store-connect publish \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$IPA_PATH" \
            --submit-to-testflight

    artifacts:
      - "**/*.ipa"
      - "ios/App/build/**"
