workflows:
  ios-capacitor:
    name: "iOS Capacitor ‚Äî Final Clean Signing"
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      node: 20
      xcode: latest
      cocoapods: default
      groups:
        - app_store_credentials
      vars:
        APP_IDENTIFIER: com.fireopscalc.app
        XCODE_SCHEME: App

    scripts:
      - name: Install dependencies
        script: |
          echo "üì¶ Installing npm packages..."
          npm ci || npm install --legacy-peer-deps

      - name: Build web assets
        script: |
          echo "üèó Building web assets..."
          npm run build || true
          if [ ! -f "dist/index.html" ]; then
            mkdir -p dist
            cp index.html dist/index.html || true
          fi

      - name: Ensure iOS platform exists & sync
        script: |
          echo "üîÑ Syncing Capacitor iOS..."
          [ -d ios ] || npx cap add ios
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          echo "üìö Installing CocoaPods..."
          cd ios/App
          pod repo update
          pod install
          cd ../../

      - name: Generate signing key
        script: |
          echo "üîë Generating signing key..."
          CERT_KEY_PATH="$CM_BUILD_DIR/cert_private.key"
          openssl genrsa -out "$CERT_KEY_PATH" 2048
          echo "CERT_KEY_PATH=$CERT_KEY_PATH" >> $CM_ENV

      - name: Fetch signing files
        script: |
          echo "üì• Fetching signing files from App Store Connect..."
          app-store-connect fetch-signing-files "$APP_IDENTIFIER" \
            --type IOS_APP_STORE \
            --platform IOS \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --certificate-key "@file:$CERT_KEY_PATH" \
            --p12-password "" \
            --create --delete-stale-profiles --verbose

      - name: Initialize keychain
        script: |
          echo "üîê Initializing keychain..."
          keychain initialize
          keychain add-certificates

      - name: Detect TEAM_ID and provisioning profile
        script: |
          echo "üîç Detecting provisioning profile..."
          PROFILE_PATH="$(find "$HOME/Library/MobileDevice/Provisioning Profiles" -name '*.mobileprovision' | head -n 1)"
          if [ -z "$PROFILE_PATH" ]; then
            echo "‚ùå No provisioning profile found!"
            exit 1
          fi
          echo "PROFILE_PATH=$PROFILE_PATH" >> $CM_ENV
          /usr/bin/security cms -D -i "$PROFILE_PATH" > "$CM_BUILD_DIR/profile.plist"
          TEAM_ID="$(/usr/libexec/PlistBuddy -c 'Print TeamIdentifier:0' "$CM_BUILD_DIR/profile.plist")"
          PROFILE_NAME="$(/usr/libexec/PlistBuddy -c 'Print Name' "$CM_BUILD_DIR/profile.plist")"
          echo "TEAM_ID=$TEAM_ID" >> $CM_ENV
          echo "PROFILE_NAME=$PROFILE_NAME" >> $CM_ENV
          echo "‚úÖ Found provisioning profile: $PROFILE_NAME"

      - name: Patch Pods signing
        script: |
          echo "üß© Disabling signing for Pods targets..."
          PROJECT_FILE="ios/App/Pods/Pods.xcodeproj/project.pbxproj"
          if [ -f "$PROJECT_FILE" ]; then
            sed -i '' '/CODE_SIGN_IDENTITY/d' "$PROJECT_FILE"
            sed -i '' '/PROVISIONING_PROFILE_SPECIFIER/d' "$PROJECT_FILE"
            sed -i '' '/DEVELOPMENT_TEAM/d' "$PROJECT_FILE"
            sed -i '' 's/CODE_SIGN_STYLE = Manual/CODE_SIGN_STYLE = Automatic/g' "$PROJECT_FILE"
            echo "‚úÖ Pods signing removed or set to automatic"
          fi

      - name: Create ExportOptions.plist
        script: |
          echo "üìù Creating ExportOptions.plist..."
          cat > "$CM_BUILD_DIR/export_options.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>manual</string>
            <key>stripSwiftSymbols</key><true/>
            <key>uploadSymbols</key><true/>
            <key>manageAppVersionAndBuildNumber</key><false/>
          </dict>
          </plist>
          PLIST
          echo "‚úÖ Export options ready"

      - name: Clean Xcode project
        script: |
          echo "üßπ Cleaning project..."
          set -o pipefail
          xcodebuild clean \
            -workspace "ios/App/App.xcworkspace" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release

      - name: Archive (App only; unset global signing first)
        script: |
          echo "üèó Archiving (App only; unsetting global signing)..."
          # Completely remove signing vars inherited by Pods
          unset CODE_SIGN_IDENTITY
          unset PROVISIONING_PROFILE_SPECIFIER
          unset PROVISIONING_PROFILE
          unset DEVELOPMENT_TEAM
          unset CODE_SIGN_STYLE

          set -o pipefail
          ARCHIVE_PATH="$CM_BUILD_DIR/App.xcarchive"
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath "$ARCHIVE_PATH" \
            -sdk iphoneos \
            archive \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$APP_IDENTIFIER" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
            PROVISIONING_PROFILE="$PROFILE_PATH" \
            Pods-App.CODE_SIGN_STYLE=Automatic \
            Pods-App.CODE_SIGN_IDENTITY="" \
            Pods-App.PROVISIONING_PROFILE_SPECIFIER="" \
            Pods-App.PROVISIONING_PROFILE="" \
            Capacitor.CODE_SIGN_STYLE=Automatic \
            Capacitor.CODE_SIGN_IDENTITY="" \
            Capacitor.PROVISIONING_PROFILE_SPECIFIER="" \
            Capacitor.PROVISIONING_PROFILE="" \
            CapacitorCordova.CODE_SIGN_STYLE=Automatic \
            CapacitorCordova.CODE_SIGN_IDENTITY="" \
            CapacitorCordova.PROVISIONING_PROFILE_SPECIFIER="" \
            CapacitorCordova.PROVISIONING_PROFILE="" \
            COMPILER_INDEX_STORE_ENABLE=NO

      - name: Export IPA
        script: |
          echo "üì¶ Exporting IPA..."
          mkdir -p "$CM_BUILD_DIR/ipa"
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/export_options.plist" \
            -exportPath "$CM_BUILD_DIR/ipa"
          ls -la "$CM_BUILD_DIR/ipa"

      - name: Upload to TestFlight
        script: |
          IPA_PATH="$(find "$CM_BUILD_DIR/ipa" -name '*.ipa' | head -n 1)"
          echo "üöÄ Uploading $IPA_PATH to TestFlight..."
          app-store-connect publish \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --path "$IPA_PATH" \
            --submit-to-testflight

    artifacts:
      - "**/*.ipa"
      - "ios/App/build/**"
