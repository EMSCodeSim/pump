workflows:
  ios_release:
    name: FireOpsCalc iOS Release (use-profiles ‚Üí archive ‚Üí export)
    instance_type: mac_mini_m2
    max_build_duration: 60

    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true

    integrations:
      app_store_connect: FireCalc

    environment:
      xcode: 16.4
      cocoapods: default
      node: 20.11.1
      vars:
        WORKSPACE: "ios/App/App.xcworkspace"
        PROJECT: "ios/App/App.xcodeproj"
        SCHEME: "App"
        CONFIGURATION: "Release"

        DEVELOPMENT_TEAM: "QZ55W58398"
        PRODUCT_BUNDLE_IDENTIFIER: "com.fireopscalc.app"

        # this is the one you actually have in Codemagic
        APPSTORE_PROFILE_NAME: "FireOpsCalcApp_AppStore"

        ARCHIVE_PATH: "/Users/builder/clone/build/App.xcarchive"
        EXPORT_DIR: "/Users/builder/clone/Export/export_tmp"
        IPA_EXPORT_DIR: "/Users/builder/clone/Export"
        IPA_NAME: "FireOpsCalc.ipa"

      ios_signing:
        certificates:
          - FireCalcCertiicate
        provisioning_profiles:
          - FireOpsCalcApp_AppStore

    scripts:
      - name: Install Node deps & build web (if present)
        script: |
          if [ -f package.json ]; then
            npm ci || npm install
            npm run build --if-present
          else
            echo "No package.json ‚Äî skipping web build."
          fi

      - name: Capacitor sync iOS
        script: |
          if [ -f capacitor.config.ts ] || [ -f capacitor.config.json ] || [ -f capacitor.config.js ]; then
            npx cap sync ios
          else
            echo "No capacitor.config.* found ‚Äî assuming native already present."
          fi
          ls -la ios/App/App/ || true

      - name: Install CocoaPods
        script: |
          cd ios/App
          pod install --repo-update || pod install
          cd ../..

      - name: Clean project of old manual signing
        script: |
          FILE="ios/App/App.xcodeproj/project.pbxproj"
          # get rid of old hard-coded manual stuff that was causing "conflicting provisioning settings"
          perl -pi -e 's/ProvisioningStyle = Manual;/ProvisioningStyle = Automatic;/g' "$FILE"
          perl -pi -e 's/PROVISIONING_PROFILE_SPECIFIER = .*;//g' "$FILE"
          perl -pi -e 's/PROVISIONING_PROFILE = .*;//g' "$FILE"
          echo "After cleaning signing lines:"
          grep -n "ProvisioningStyle" "$FILE" || true

      - name: üîê Apply uploaded profiles to the project (Codemagic tool)
        script: |
          # CM_PROVISIONING_PROFILES_DIR is where Codemagic puts uploaded .mobileprovision files
          # this will map your FireOpsCalcApp_AppStore profile to the right target
          xcode-project use-profiles \
            --project "$PROJECT" \
            --scheme "$SCHEME" \
            --export-method app-store-connect \
            --profiles-dir "$CM_PROVISIONING_PROFILES_DIR" \
            --team-id "$DEVELOPMENT_TEAM"

          echo "After use-profiles, dump signing-related lines:"
          grep -n "PROVISIONING_PROFILE" ios/App/App.xcodeproj/project.pbxproj || true
          grep -n "ProvisioningStyle" ios/App/App.xcodeproj/project.pbxproj || true

      - name: Create ExportOptions.plist (App Store)
        script: |
          EXPORT_PLIST="/Users/builder/ExportOptions.plist"
          rm -f "$EXPORT_PLIST"
          /usr/bin/plutil -create xml1 "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :method string app-store-connect" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :signingStyle string manual" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :teamID string $DEVELOPMENT_TEAM" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :provisioningProfiles dict" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :provisioningProfiles:$PRODUCT_BUNDLE_IDENTIFIER string $APPSTORE_PROFILE_NAME" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :compileBitcode bool false" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Add :uploadSymbols bool true" "$EXPORT_PLIST"
          /usr/libexec/PlistBuddy -c "Print" "$EXPORT_PLIST"

      - name: üì¶ Archive (do NOT override signing from CLI)
        script: |
          set -e

          # auto-detect scheme just in case
          DETECTED_SCHEME=$(xcodebuild -list -workspace "$WORKSPACE" 2>/dev/null \
            | awk '/Schemes:/{flag=1;next}/^$/{flag=0}flag{print $1}' \
            | head -n 1)

          if [ -n "$DETECTED_SCHEME" ]; then
            SCHEME="$DETECTED_SCHEME"
          fi

          rm -rf "$ARCHIVE_PATH"

          # IMPORTANT:
          #  - we do NOT pass CODE_SIGN_STYLE=Automatic here
          #  - we do NOT pass PROVISIONING_PROFILE_SPECIFIER here
          #  because `xcode-project use-profiles` already put the right values
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -destination 'generic/platform=iOS' \
            -archivePath "$ARCHIVE_PATH" \
            archive

      - name: üöÄ Export IPA
        script: |
          set -e
          mkdir -p "$EXPORT_DIR" "$IPA_EXPORT_DIR"
          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist "/Users/builder/ExportOptions.plist" \
            -exportPath "$EXPORT_DIR"

          IPA_PATH="$(ls -1t "$EXPORT_DIR"/*.ipa 2>/dev/null | head -n 1)"
          if [ -z "$IPA_PATH" ]; then
            echo "‚ùå Export did not produce an IPA. Contents of $EXPORT_DIR:"
            ls -la "$EXPORT_DIR" || true
            exit 1
          fi

          mv -f "$IPA_PATH" "$IPA_EXPORT_DIR/$IPA_NAME"
          echo "‚úÖ Exported: $IPA_EXPORT_DIR/$IPA_NAME"

    artifacts:
      - "/Users/builder/clone/Export/FireOpsCalc.ipa"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - Internal Testers
